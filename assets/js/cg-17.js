(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{430:function(a,n,e){"use strict";e.r(n);var r=e(22),s=Object(r.a)({},(function(){var a=this,n=a.$createElement,e=a._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"aqs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aqs"}},[a._v("#")]),a._v(" AQS")]),a._v(" "),e("p",[a._v("源码位置 : java.util.concurrent.locks.AbstractQueuedSynchronizer")]),a._v(" "),e("p",[a._v("AQS 意为队列同步器, 实际它就是 locks 包下的一个工具组件, 它出现的目的即为所有出现的自定义锁服务的.")]),a._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"AQS所涉及的一些类","data-src":"/images/posts/java-juc-aqs/20200918221401665.png",loading:"lazy"}})]),a._v(" "),e("h2",{attrs:{id:"aqs所涉及的一些类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aqs所涉及的一些类"}},[a._v("#")]),a._v(" AQS所涉及的一些类")]),a._v(" "),e("ul",[e("li",[a._v("AQS本身, AbstractQueuedSynchronizer.class")]),a._v(" "),e("li",[a._v("AQS的队列元素 Node.class")]),a._v(" "),e("li",[a._v("java的锁接口, Lock.class")]),a._v(" "),e("li",[a._v("自定义锁的监视器 Condition.class")]),a._v(" "),e("li",[a._v("自定义锁的实现基于 LockSupport")])]),a._v(" "),e("h2",{attrs:{id:"abstractqueuedsynchronizer-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abstractqueuedsynchronizer-class"}},[a._v("#")]),a._v(" AbstractQueuedSynchronizer.class")]),a._v(" "),e("p",[a._v("AQS中主要维护了一个由内部类Node组成的一个队列")]),a._v(" "),e("p",[a._v("同时有3个重要的变量 volatile Node head; volatile Node tail; volatile int state; 都是用 volatile 修饰保证其可见")]),a._v(" "),e("p",[e("img",{staticClass:"lazy",attrs:{alt:"","data-src":"/images/posts/java-juc-aqs/20200918221415153.png",loading:"lazy"}})]),a._v(" "),e("h2",{attrs:{id:"node-class"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-class"}},[a._v("#")]),a._v(" Node.class")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("static final class Node {\n\n\t\t// 如果是共享节点, 等待队列后继节点为此常量\n        static final AbstractQueuedSynchronizer.Node SHARED = new AbstractQueuedSynchronizer.Node();\n        static final AbstractQueuedSynchronizer.Node EXCLUSIVE = null;\n        // 标识为已取消\n        static final int CANCELLED = 1;\n        // 后继节点为等待状态, 可被唤醒, 同时也标识该状态下节点的后继节点应该被阻塞, 处于同步队列中\n        static final int SIGNAL = -1;\n        // 调用了 condition 的 awaite 方法, 使当前线程处在等待队列中\n        static final int CONDITION = -2;\n        // 共享锁\n        static final int PROPAGATE = -3;\n        volatile int waitStatus;\n        // 前驱\n        volatile AbstractQueuedSynchronizer.Node prev;\n        // 同步队列后继\n        volatile AbstractQueuedSynchronizer.Node next;\n        // 同步状态线程\n        volatile Thread thread;\n        // 等待队列后继\n        AbstractQueuedSynchronizer.Node nextWaiter;\n\n        final boolean isShared() {\n            return this.nextWaiter == SHARED;\n        }\n\n        final AbstractQueuedSynchronizer.Node predecessor() throws NullPointerException {\n            AbstractQueuedSynchronizer.Node var1 = this.prev;\n            if (var1 == null) {\n                throw new NullPointerException();\n            } else {\n                return var1;\n            }\n        }\n\n        Node() {\n        }\n\n        Node(Thread var1, AbstractQueuedSynchronizer.Node var2) {\n            this.nextWaiter = var2;\n            this.thread = var1;\n        }\n\n        Node(Thread var1, int var2) {\n            this.waitStatus = var2;\n            this.thread = var1;\n        }\n    }\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br"),e("span",{staticClass:"line-number"},[a._v("39")]),e("br"),e("span",{staticClass:"line-number"},[a._v("40")]),e("br"),e("span",{staticClass:"line-number"},[a._v("41")]),e("br"),e("span",{staticClass:"line-number"},[a._v("42")]),e("br"),e("span",{staticClass:"line-number"},[a._v("43")]),e("br"),e("span",{staticClass:"line-number"},[a._v("44")]),e("br"),e("span",{staticClass:"line-number"},[a._v("45")]),e("br"),e("span",{staticClass:"line-number"},[a._v("46")]),e("br"),e("span",{staticClass:"line-number"},[a._v("47")]),e("br"),e("span",{staticClass:"line-number"},[a._v("48")]),e("br"),e("span",{staticClass:"line-number"},[a._v("49")]),e("br")])]),e("h2",{attrs:{id:"aqs的工作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aqs的工作原理"}},[a._v("#")]),a._v(" AQS的工作原理")]),a._v(" "),e("p",[a._v("AQS中的三个关键变量")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("    // 队列的头节点\n    private transient volatile Node head;\n\n    // 队列的尾结点\n    private transient volatile Node tail;\n\n    // 同步状态\n    private volatile int state;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br")])]),e("h3",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),e("p",[a._v("当一条线程执行到一个同步代码块时, 会进行如下几步操作")]),a._v(" "),e("h3",{attrs:{id:"第一种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一种情况"}},[a._v("#")]),a._v(" 第一种情况")]),a._v(" "),e("ol",[e("li",[a._v("成功获取锁")]),a._v(" "),e("li",[a._v("执行代码")]),a._v(" "),e("li",[a._v("释放锁")]),a._v(" "),e("li",[a._v("唤醒队首节点的下一个状态小于0的节点")])]),a._v(" "),e("h3",{attrs:{id:"第二种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二种情况"}},[a._v("#")]),a._v(" 第二种情况")]),a._v(" "),e("ol",[e("li",[a._v("获取锁失败")]),a._v(" "),e("li",[a._v("当前线程包装成Node对象, 将AQS中tail节点通过CAS指向自己")]),a._v(" "),e("li",[a._v("死循环判断自己的前驱节点是否为头结点, 并且尝试获取锁, 如果前驱为头结点, 同时获取锁成功\n"),e("ol",[e("li",[a._v("将自己设置为头结点")]),a._v(" "),e("li",[a._v("将原头节点后继节点设置为null")]),a._v(" "),e("li",[a._v("执行代码")]),a._v(" "),e("li",[a._v("释放锁")])])]),a._v(" "),e("li",[a._v("如果获取锁失败 (进行以下两件事, 同时返回boolean值. 条件为 1&& 2\n"),e("ol",[e("li",[a._v("将队列中状态为 1(超时等待或中断线程)移除队列 并将自身前驱节点状态改为 -1, 如果为 -1 返回 true 代表需要将当前线程阻塞(停留在同步队列中)")]),a._v(" "),e("li",[a._v("阻塞当前线程并判断当前线程是否被中断")])])])]),a._v(" "),e("h3",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),e("p",[a._v("获取锁成功 -> 执行代码 -> 结束")]),a._v(" "),e("p",[a._v("获取锁失败 -> 进入同步队列 (在次获取锁条件: 等待前驱节点释放锁后唤醒自己) 同时在尝试获取锁失败的时候会做两件事")]),a._v(" "),e("ol",[e("li",[a._v("将状态为 1 的Node节点从队列移除, 将自己的前驱节点状态改为 -1 .")]),a._v(" "),e("li",[a._v("将当前线程通过自身线程阻塞, 同时判断自申是否被中断 (如果被中断, AQS 还会调用线程的 interrupte 方法")])]),a._v(" "),e("p",[a._v("以上即非公平锁的处理过程, 在获取锁失败之后进行自循环的时候, 仍然会新线程去尝试通过 CAS 获取锁, 如果新线程获取成功, 那么同步队列的队首元素将不会被唤醒. 即非公平, 先来不一定先得. 但在队列中的线程, 是满足 FIFO 的. 即先到先得锁.")]),a._v(" "),e("p",[a._v("同时, 如果释放锁的线程, 再次尝试获取锁的概率, 会非常高.")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("sync = [Thread[Thread-2,5,main], Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main]]\nsync = [Thread[Thread-2,5,main], Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main]]\n\nThread-1\nThread-0\n\nsync = [Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main]]\nsync = [Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main]]\n\nThread-1\nThread-2\n\nsync = [Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main]]\nsync = [Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main]]\nThread-2\nThread-1\n\n\n\n\nsync = [Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main]]\nsync = [Thread[Thread-3,5,main], Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main]]\n\nThread-2\nThread-1\n\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\n\nThread-1\nThread-3\n\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\n\nThread-1\nThread-3\n\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\n\nThread-1\nThread-3\n\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\nsync = [Thread[Thread-4,5,main], Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main]]\n\nThread-1\nThread-3\n\nsync = [Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main], Thread[Thread-1,5,main]]\nsync = [Thread[Thread-5,5,main], Thread[Thread-6,5,main], Thread[Thread-7,5,main], Thread[Thread-8,5,main], Thread[Thread-9,5,main], Thread[Thread-0,5,main], Thread[Thread-2,5,main], Thread[Thread-1,5,main]]\n\nThread-3\nThread-4\n\n\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br"),e("span",{staticClass:"line-number"},[a._v("39")]),e("br"),e("span",{staticClass:"line-number"},[a._v("40")]),e("br"),e("span",{staticClass:"line-number"},[a._v("41")]),e("br"),e("span",{staticClass:"line-number"},[a._v("42")]),e("br"),e("span",{staticClass:"line-number"},[a._v("43")]),e("br"),e("span",{staticClass:"line-number"},[a._v("44")]),e("br"),e("span",{staticClass:"line-number"},[a._v("45")]),e("br"),e("span",{staticClass:"line-number"},[a._v("46")]),e("br"),e("span",{staticClass:"line-number"},[a._v("47")]),e("br"),e("span",{staticClass:"line-number"},[a._v("48")]),e("br"),e("span",{staticClass:"line-number"},[a._v("49")]),e("br"),e("span",{staticClass:"line-number"},[a._v("50")]),e("br"),e("span",{staticClass:"line-number"},[a._v("51")]),e("br"),e("span",{staticClass:"line-number"},[a._v("52")]),e("br"),e("span",{staticClass:"line-number"},[a._v("53")]),e("br"),e("span",{staticClass:"line-number"},[a._v("54")]),e("br"),e("span",{staticClass:"line-number"},[a._v("55")]),e("br"),e("span",{staticClass:"line-number"},[a._v("56")]),e("br"),e("span",{staticClass:"line-number"},[a._v("57")]),e("br")])]),e("h2",{attrs:{id:"非公平锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#非公平锁"}},[a._v("#")]),a._v(" 非公平锁")]),a._v(" "),e("p",[a._v("在新获取锁线程与, 同步队列中的线程对锁的竞争是不公平的, 即后来的可以先获取到锁.")]),a._v(" "),e("p",[a._v("加锁方法先cas获取锁, 失败后进入队列, 锁释放之后去唤醒队首节点争抢锁的时候, 锁可能已经被新到线程获取到了.")]),a._v(" "),e("h2",{attrs:{id:"公平锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#公平锁"}},[a._v("#")]),a._v(" 公平锁")]),a._v(" "),e("p",[a._v("绝对时间基础上的公平")]),a._v(" "),e("p",[a._v("与非公平锁不同, 首先进行的一步操作是")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("protected int tryAcquireShared(int acquires) {\n            for (;;) {\n            // 当前线程非队首节点的下一个节点 返回失败, 加入同步队列\n                if (hasQueuedPredecessors())\n                    return -1;\n                ...\n                ..\n            }\n        }\n        \n        \npublic final boolean hasQueuedPredecessors() {\n\n        Node t = tail; // Read fields in reverse initialization order\n        Node h = head;\n        Node s;\n        return h != t &&\n            ((s = h.next) == null || s.thread != Thread.currentThread());\n        \n    }\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br")])]),e("p",[a._v("完全遵循FIFO, 获取锁时先判断自己是不是下一个应该得到锁的线程.")]),a._v(" "),e("h2",{attrs:{id:"重入锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重入锁"}},[a._v("#")]),a._v(" 重入锁")]),a._v(" "),e("p",[a._v("通过保存线程的引用地址来判断是否可以重入.")]),a._v(" "),e("h2",{attrs:{id:"共享锁"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#共享锁"}},[a._v("#")]),a._v(" 共享锁")]),a._v(" "),e("p",[a._v("通过定义信号量来做控制. 即同时可以有多少线程可以共享这把锁")]),a._v(" "),e("h2",{attrs:{id:"锁降级"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#锁降级"}},[a._v("#")]),a._v(" 锁降级")]),a._v(" "),e("p",[a._v("获取读锁 -> 获取写锁 -> 释放读锁 -> 获取读锁 -> 释放写锁 -> 释放读锁")])])}),[],!1,null,null,null);n.default=s.exports}}]);